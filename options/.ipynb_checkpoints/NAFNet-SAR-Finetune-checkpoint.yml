# ========================== 通用设置 ==========================
name: NAFNet-SAR-Finetune-width32-SingleBlur-Final
model_type: ImageRestorationModel
scale: 1
num_gpu: 1 
manual_seed: 42

# ========================== 数据集设置 ==========================
datasets:
  train:
    name: SAR-train
    type: OnlineSAR_Deblur_Dataset
    dataroot_gt: ./128-new-GT
    kernel_options:
        kernel_size_range: [7, 25]
        kernel_list: ['aniso', 'generalized_aniso', 'plateau_aniso']
        kernel_prob: [0.33, 0.33, 0.34]
        sigma_x_range: [0.5, 4]
        sigma_y_range: [0.5, 4]
        rotation_range: [-3.14159, 3.14159]
        betag_range: [0.5, 4]
        betap_range: [1, 2]
        isotropic_options: {'aniso': False, 'generalized_aniso': False, 'plateau_aniso': False}
    
    

    gt_size: 128 
    use_flip: true
    use_rot: true

    # data loader
    use_shuffle: true
    num_worker_per_gpu: 8
    batch_size_per_gpu: 32
    dataset_enlarge_ratio: 1
    prefetch_mode: ~

  val:
    name: SAR-val
    type: OnlineSAR_Deblur_Dataset
    dataroot_gt: ./val-set-128
    #ataroot_lq: ./datasets/final_test_defocus
    io_backend:
      type: disk

    kernel_options:
        kernel_size_range: [7, 25]
        kernel_list: ['aniso', 'generalized_aniso', 'plateau_aniso']
        kernel_prob: [0.33, 0.33, 0.34]
        sigma_x_range: [0.5, 6]  
        sigma_y_range: [0.5, 6]
        rotation_range: [-3.14159, 3.14159]
        betag_range: [0.5, 4]
        betap_range: [1, 2]
        isotropic_options: {'aniso': False, 'generalized_aniso': False, 'plateau_aniso': False}

# ========================== 网络设置 ==========================
network_g:
  type: NAFNet
  img_channel: 1 
  width: 32
  enc_blk_nums: [1, 1, 1, 28]
  middle_blk_num: 1
  dec_blk_nums: [1, 1, 1, 1]

finetune_settings:
  frozen_layers:
    - encoders.0
    - encoders.1

# ========================== 路径与权重设置 ==========================
path:
  pretrain_network_g: ./pretrained_models/NAFNet-GoPro-adapted-for-SAR.pth 
  strict_load_g: false # <-- 设为false，允许不严格加载
  resume_state: ~ 
# ========================== 训练设置 ==========================
train:
  optim_g:
    type: AdamW
    lr: !!float 1e-3 
    weight_decay: !!float 1e-3
    betas: [0.9, 0.9]

  scheduler:
    type: TrueCosineAnnealingLR
    T_max: 200000 # <-- 根据您的总迭代次数调整
    eta_min: !!float 1e-7

  total_iter: 200000 # <-- 设置您的总迭代次数

  # losses
  pixel_opt:
    type: L1Loss
    loss_weight: 1.0
    reduction: mean

# ========================== 验证设置 (已补充完整) ==========================
val:
  val_freq: !!float 1e3 # 每5000次迭代验证一次
  save_img: true # 验证时不保存图像以节省空间

  metrics:
    psnr: 
      type: psnr
      crop_border: 0
      test_y_channel: false
    ssim:
      type: ssim
      crop_border: 0
      test_y_channel: false

# ========================== 日志设置 (已补充完整) ==========================
logger:
  print_freq: 200 # 每200次迭代打印一次日志
  save_checkpoint_freq: !!float 5e3 # 每5000次迭代保存一次检查点
  use_tb_logger: true
  wandb:
    project: ~
    resume_id: ~

# ========================== 分布式训练设置 (已补充完整) ==========================
dist_params:
  backend: nccl
  port: 29500